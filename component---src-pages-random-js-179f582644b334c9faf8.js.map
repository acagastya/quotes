{"version":3,"sources":["webpack:///./src/pages/random.js"],"names":["repo","siteMetadata","query","RandomQuotePage","edges","data","allMarkdownRemark","Math","floor","random","length","node","frontmatter","attributed","author","misattributed","path","title","unverified","where","slug","heading","className","id","to"],"mappings":"2FAAA,sHAMQA,EAASC,eAATD,KAgFD,IAAME,EAAK,aAuBHC,UArGf,YAAoC,IAC1BC,EADyB,EAARC,KACFC,kBAAfF,MADyB,EAW7BA,EATQG,KAAKC,MAAMD,KAAKE,SAAWL,EAAMM,SAS9BC,KAAKC,YAPlBC,EAJ+B,EAI/BA,WACAC,EAL+B,EAK/BA,OACAC,EAN+B,EAM/BA,cACAC,EAP+B,EAO/BA,KACAC,EAR+B,EAQ/BA,MACAC,EAT+B,EAS/BA,WACAC,EAV+B,EAU/BA,MAGF,OACE,kBAAC,IAAD,CAAQC,KAAK,SAASC,QAAQ,gBAC5B,kBAAC,IAAD,CAAKJ,MAAM,iBACX,yBAAKK,UAAU,2BACb,yBAAKA,UAAU,iBACb,6BAASC,GAAG,eAAeD,UAAU,gBACnC,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,QACZ,iCACE,4BAAQA,UAAU,oBAChB,wBAAIA,UAAU,mBACZ,4BACE,kBAAC,OAAD,CAAME,GAAOxB,EAAL,UAAmBgB,GAASC,KAGxC,yBAAKK,UAAU,QACb,8BACE,0BAAMA,UAAU,iBAAhB,aACA,0BAAMA,UAAU,oBACd,kBAAC,OAAD,CACEA,UAAU,wBACVE,GAAOxB,EAAL,YAAqBc,GAEtBA,GAEFD,EACC,8BACE,6BACE,mCAGF,KACHE,EACC,8BACE,6BACE,mCAGF,KACHG,EACC,8BACE,6BACE,mCAGF,KACHC,EACC,8BACE,iCAAOA,IAEP","file":"component---src-pages-random-js-179f582644b334c9faf8.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { siteMetadata } from '../../gatsby-config';\n\nconst { repo } = siteMetadata;\n\nfunction RandomQuotePage({ data }) {\n  const { edges } = data.allMarkdownRemark;\n  const rnd = Math.floor(Math.random() * edges.length);\n  const {\n    attributed,\n    author,\n    misattributed,\n    path,\n    title,\n    unverified,\n    where,\n  } = edges[rnd].node.frontmatter;\n\n  return (\n    <Layout slug=\"random\" heading=\"Random Quote\">\n      <SEO title=\"Random Quote\" />\n      <div className=\"home-sections-container\">\n        <div className=\"home-sections\">\n          <section id=\"recent-posts\" className=\"home-section\">\n            <div className=\"list-container\">\n              <ul className=\"list\">\n                <article>\n                  <header className=\"list-item-header\">\n                    <h3 className=\"list-item-title\">\n                      <em>\n                        <Link to={`${repo}/quote/${path}`}>{title}</Link>\n                      </em>\n                    </h3>\n                    <div className=\"meta\">\n                      <span>\n                        <span className=\"screen-reader\">Quote by </span>\n                        <span className=\"author-container\">\n                          <Link\n                            className=\"author-container-link\"\n                            to={`${repo}/authors/${author}`}\n                          >\n                            {author}\n                          </Link>\n                          {attributed ? (\n                            <span>\n                              <sup>\n                                <em>!</em>\n                              </sup>\n                            </span>\n                          ) : null}\n                          {misattributed ? (\n                            <span>\n                              <sup>\n                                <em>?</em>\n                              </sup>\n                            </span>\n                          ) : null}\n                          {unverified ? (\n                            <span>\n                              <sup>\n                                <em>#</em>\n                              </sup>\n                            </span>\n                          ) : null}\n                          {where ? (\n                            <span>\n                              <em>, {where}</em>\n                            </span>\n                          ) : null}\n                        </span>\n                      </span>\n                    </div>\n                  </header>\n                </article>\n              </ul>\n            </div>\n          </section>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query RandomQuoteQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            attributed\n            author\n            misattributed\n            path\n            title\n            unverified\n            where\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default RandomQuotePage;\n"],"sourceRoot":""}